openapi: 3.0.0
servers:
  - url: https://gateway-web.{env}.interac.ca/publicapi/api/v2
    variables:
      env:
        default: beta
info:
  version: 2.0.0
  title: e-Transfer Public API
paths:
  /access-tokens:
    servers:
      - url: https://gateway-web.{env}.interac.ca/publicapi/api/v1
        variables:
          env:
            default: beta
    parameters:
      - $ref: '#/components/parameters/thirdPartyAccessId'
    get:
      description: |
        Get the access token
      parameters:
        - name: secretKey
          in: header
          required: true
          description: |
              The encrypted secret key generated after registering your app. Generated by the algorithm: Base64 encode( SHA-256( salt + ':' + original secret key )). <br/><strong>Example Java code:</strong><br/>MessageDigest md = MessageDigest.getInstance("SHA-256");<br/>return new String(Base64.encodeBase64(md.digest((salt + ':' + secretKey).getBytes())));
          schema:
            type: string
        - name: salt
          in: header
          required: true
          description: |
            salt used to generate encrypted secret key
          schema:
            type: string
      tags:
        - Authentication
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 9999
                      message: Unknown application error
  /contacts:
    parameters:
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/thirdPartyAccessId'
      - $ref: '#/components/parameters/requestId'
      - $ref: '#/components/parameters/deviceId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/apiRegistrationId'
    get:
      operationId: getContacts
      description: Retrieves all the contacts
      parameters:
        - name: maxResponseItems
          in: query
          required: false
          schema:
            type: integer
        - name: fromLastUpdatedDate
          in: query
          required: false
          description: >-
            UTC datatime of contact used to retrieve only contacts updated from
            the specified dateTime; format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.
            '2016-09-11T16:12:12.000'
          schema:
            type: string
            format: datetime
        - name: offset
          in: query
          required: false
          description: >-
            offset is starting point of contacts filter; if offset is not
            provided it would be defaulted to zero;
          schema:
            type: integer
        - name: sortBy
          in: query
          required: false
          description: |-
            contacts will be sorted based on sortBy column,
             - sortBy will be set to contactUpdatedDate if fromLastUpdatedDate.
             - sortBy will be defaulted to contactName if no filters are specified.
          schema:
            type: string
            enum:
              - contactName
              - contactUpdatedDate
        - name: orderBy
          in: query
          required: false
          description: order by is required if sort by is specified.
          schema:
            type: string
            enum:
              - desc
              - asc
      tags:
        - Contact management
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                description: List of contacts returned for customer
                items:
                  $ref: '#/components/schemas/Contact'
        '206':
          description: 'Partial content returned, use pagination filters'
          headers:
            x-limit:
              description: contact range returned
              schema:
                type: string
            x-total-count:
              description: total number of contacts for provided filter.
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                description: List of partial contacts returned based on max item
                items:
                  $ref: '#/components/schemas/Contact'
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request.
                    - code: 1011
                      message: Invalid apiRegistartionId.
                    - code: 1048
                      message: Hard contact already exist for sender.
                    - code: 1053
                      message: orderBy field is missing.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '403':
          description: >-
            Forbidden - The server understood the request, but is refusing to
            fulfill it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1037
                      message: Feature is not supported for current user
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    post:
      description: creates a public api user registration for an e-Transfer customer
      operationId: addContact
      tags:
        - Contact management
      responses:
        '201':
          description: Successful response
          headers:
            location:
              description: URL for accessing the newly created contact
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - contactId
                  - contactHash
                properties:
                  contactId:
                    description: Id of the newly created Contact.
                    type: string
                  contactHash:
                    description: unique hash value of newly created Contact.
                    type: string
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request.
                    - code: 1011
                      message: Invalid apiRegistartionId.
                    - code: 1043
                      message: Duplicate contact name.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '403':
          description: >-
            Forbidden - The server understood the request, but is refusing to
            fulfill it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1037
                      message: Feature is not supported for current user.
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist
                    - code: 1006
                      message: Hard contact doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
  '/contacts/{contactId}':
    parameters:
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/thirdPartyAccessId'
      - $ref: '#/components/parameters/requestId'
      - $ref: '#/components/parameters/deviceId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/apiRegistrationId'
    put:
      description: updates a contact for an e-Transfer customer
      operationId: updateContact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
      tags:
        - Contact management
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - contactHash
                properties:
                  contactHash:
                    description: unique hash value of newly created Contact.
                    type: string
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request
                    - code: 1012
                      message: 'Invalid contact hash, get last updated contact details'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '403':
          description: >-
            Forbidden - The server understood the request, but is refusing to
            fulfill it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1037
                      message: Feature is not supported for current user.
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1006
                      message: Hard contact doesn't exist.
                    - code: 1007
                      message: contact doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
    delete:
      description: deletes a contact for an e-Transfer customer
      operationId: deleteContact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
      tags:
        - Contact management
      responses:
        '204':
          description: Successful response
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request
                    - code: 1011
                      message: Invalid apiRegistartionId
                    - code: 1044
                      message: Contact can't be deleted; if in flight transfers exist.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '403':
          description: >-
            Forbidden - The server understood the request, but is refusing to
            fulfill it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1037
                      message: Feature is not supported for current user.
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1006
                      message: Hard contact doesn't exist.
                    - code: 1007
                      message: contact doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    get:
      description: >-
        retrieves a contact of an e-Transfer customer that has a public api
        registartion and the associated auto-deposit registration details if the
        registration exists and is associated with one of contact's notification
        handles
      operationId: getContact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            minLength: 16
            maxLength: 16
      tags:
        - Contact management
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request
                    - code: 1011
                      message: Invalid apiRegistartionId
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '403':
          description: >-
            Forbidden - The server understood the request, but is refusing to
            fulfill it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1037
                      message: Feature is not supported for current user.
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1007
                      message: contact doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /money-requests/send:
    parameters:
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/thirdPartyAccessId'
      - $ref: '#/components/parameters/requestId'
      - $ref: '#/components/parameters/deviceId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/apiRegistrationId'
    get:
      operationId: getMoneyRequests
      description: retrieves all money requests
      parameters:
        - name: fromDate
          in: query
          required: false
          description: >-
            UTC datatime format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.
            '2016-09-11T16:12:12.000'; this parameter is mandatory if
            sourceMoneyRequestId or referenceNumber is not given.
          schema:
            type: string
            format: dateTime
        - name: toDate
          in: query
          required: false
          description: >-
            UTC datatime format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.
            '2016-09-11T16:12:12.000'; this parameter is mandatory if
            sourceMoneyRequestId or referenceNumber is not given.
          schema:
            type: string
            format: dateTime
        - name: maxResponseItems
          in: query
          required: false
          description: >-
            if offset is provided then maxResponse items is required; all ( OR
            maximum set by interac system ) items are returned if this field is
            absent
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: >-
            offset is starting point of money-requests filter; if offset is not
            provided it would be defaulted  to zero;
          schema:
            type: integer
        - name: sortBy
          in: query
          required: false
          description: 'money-requests will be sorted based on sortBy column. '
          schema:
            type: string
            enum:
              - creationDate
        - name: orderBy
          in: query
          required: false
          description: order by is required if sort by is specified.
          schema:
            type: string
            enum:
              - desc
              - asc
        - name: sourceMoneyRequestId
          in: query
          required: false
          description: id created at originating system
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: referenceNumber
          in: query
          required: false
          description: 'unique money request reference Number  '
          schema:
            type: string
            maxLength: 16
      tags:
        - Send Money Request
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MoneyRequest'
        '206':
          description: Partial content returned
          headers:
            x-limit:
              description: range of money request
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MoneyRequest'
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request.
                    - code: 1011
                      message: Invalid apiRegistartionId.
                    - code: 1030
                      message: Invalid date range.
                    - code: 1031
                      message: Mutually exclusive options are specified.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1007
                      message: Contact doesn't exist.
                    - code: 1025
                      message: Money request doesn't exist.
                    - code: 1053
                      message: orderBy field is missing.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    post:
      description: creates a money request for an e-Transfer customer
      operationId: sendMoneyRequest
      tags:
        - Send Money Request
      responses:
        '201':
          description: Successful response
          headers:
            location:
              description: URL for accessing the newly created money request
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - referenceNumber
                properties:
                  referenceNumber:
                    description: reference Number of the newly created money request
                    type: string
                  paymentGatewayUrl:
                    description: the payment gateway url for money request fullfilment
                    type: string
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request.
                    - code: 1011
                      message: Invalid apiRegistartionId.
                    - code: 1012
                      message: 'Invalid contact hash, get last updated contact details.'
                    - code: 1020
                      message: Duplicate source system id.
                    - code: 1021
                      message: Expiry Date is less than Creation Date.
                    - code: 1023
                      message: Expiry Date exceeds threshold limit.
                    - code: 1038
                      message: Outgoing money request amount threshold exceeded.
                    - code: 1039
                      message: >-
                        Maximum number of outgoing money requests threshold
                        exceeded.
                    - code: 1040
                      message: Customer can't send money request to Recipient/Contact.
                    - code: 1041
                      message: Invoice due date exceeds the money request expiry date.
                    - code: 1049
                      message: >-
                        Customer blocked to send money request notifications to
                        Recipient/Contact.
                    - code: 1050
                      message: >-
                        Editable fulfill amount is not supported for requesting
                        customer.
                    - code: 1052
                      message: >-
                        Notice cannot be sent. Notifications are supressed for
                        this Money Request.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '403':
          description: >-
            Forbidden - The server understood the request, but is refusing to
            fulfill it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1037
                      message: Feature is not supported for current user
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1006
                      message: Hard contact doesn't exist.
                    - code: 1007
                      message: contact doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        $ref: '#/components/requestBodies/MoneyRequest'
  '/money-requests/send/{referenceNumber}':
    parameters:
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/thirdPartyAccessId'
      - $ref: '#/components/parameters/requestId'
      - $ref: '#/components/parameters/deviceId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/apiRegistrationId'
    put:
      description: updates a money request for an e-Transfer customer
      operationId: updateMoneyRequest
      parameters:
        - name: referenceNumber
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
      tags:
        - Send Money Request
      responses:
        '204':
          description: Successful response
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request.
                    - code: 1011
                      message: Invalid apiRegistartionId.
                    - code: 1012
                      message: 'Invalid contact hash, get last updated contact details.'
                    - code: 1020
                      message: Duplicate source system id.
                    - code: 1021
                      message: Expiry Date is less than Creation Date.
                    - code: 1023
                      message: Expiry Date exceeds threshold limit.
                    - code: 1038
                      message: Outgoing money request amount threshold exceeded.
                    - code: 1039
                      message: >-
                        Maximum number of outgoing money requests threshold
                        exceeded.
                    - code: 1040
                      message: Customer can't send money request to Recipient/Contact.
                    - code: 1041
                      message: Invoice due date exceeds the money request expiry date.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '403':
          description: >-
            Forbidden - The server understood the request, but is refusing to
            fulfill it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1037
                      message: Feature is not supported for current user
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1006
                      message: Hard contact doesn't exist.
                    - code: 1007
                      message: contact doesn't exist.
                    - code: 1025
                      message: Money request doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        $ref: '#/components/requestBodies/MoneyRequest'
  '/money-requests/send/{referenceNumber}/notice':
    parameters:
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/thirdPartyAccessId'
      - $ref: '#/components/parameters/requestId'
      - $ref: '#/components/parameters/deviceId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/apiRegistrationId'
    patch:
      description: re-send a money request notice
      operationId: sendMoneyRequestNotice
      parameters:
        - name: referenceNumber
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
      tags:
        - Send Money Request
      responses:
        '204':
          description: Successful response
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request.
                    - code: 1011
                      message: Invalid apiRegistartionId.
                    - code: 1033
                      message: Request cannot be processed due to current status.
                    - code: 1042
                      message: >-
                        Exceeded max number of notifications for the Money
                        Request.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1025
                      message: Money request doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  '/money-requests/send/{referenceNumber}/cancel':
    parameters:
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/thirdPartyAccessId'
      - $ref: '#/components/parameters/requestId'
      - $ref: '#/components/parameters/deviceId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/apiRegistrationId'
    patch:
      description: cancels a money request
      operationId: cancelMoneyRequest
      parameters:
        - name: referenceNumber
          in: path
          required: true
          schema:
            type: string
            maxLength: 16
      tags:
        - Send Money Request
      responses:
        '204':
          description: Successful response
        '400':
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1000
                      message: Invalid request.
                    - code: 1011
                      message: Invalid apiRegistartionId.
                    - code: 1033
                      message: Request cannot be processed due to current status.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1001
                      message: Invalid access
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
              examples:
                response:
                  value:
                    - code: 1005
                      message: ApiRegistartionId doesn't exist.
                    - code: 1025
                      message: Money request doesn't exist.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellationReason'
components:
  parameters:
    thirdPartyAccessId:
      name: thirdPartyAccessId
      in: header
      description: unique id that identifies a third party partner
      required: true
      schema:
        type: string
        maximum: 50
    requestId:
      name: requestId
      in: header
      description: >-
        partner generated unique id for each request used for message tracking
        purposes
      required: true
      schema:
        type: string
        minimum: 1
        maximum: 64
    deviceId:
      name: deviceId
      in: header
      description: user device unique identifier
      required: true
      schema:
        type: string
        minimum: 1
        maximum: 64
    applicationId:
      name: applicationId
      in: header
      description: user application unique identifier
      required: false
      schema:
        type: string
        minimum: 1
        maximum: 64
    accessToken:
      name: accessToken
      in: header
      required: true
      description: |
        OAuth2 access token, the format is 'Bearer AccessToken'.
      schema:
        type: string
        maximum: 64
    apiRegistrationId:
      name: apiRegistrationId
      in: header
      description: unique identifier for the user api registration
      required: true
      schema:
        type: string
        maximum: 50
    participantAccessToken:
      name: participantAccessToken
      in: header
      description: access token provided by participant.
      required: false
      schema:
        type: string
        maximum: 64
  requestBodies:
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
      required: true
    MoneyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MoneyRequest'
      required: true
  schemas:
    AccessToken:
      type: object
      required:
        - accessToken
        - expiresIn
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
          description: example value is 'bearer'
        expiresIn:
          type: integer
          description: how many seconds the token will expire
        scope:
          type: string
          description: example value is 'read trust write'
    NotificationPreference:
      type: object
      required:
        - handle
        - handleType
        - active
      properties:
        handle:
          type: string
          minLength: 6
          maxLength: 64
          description: >-
            Email address (format a@b.ca) or mobile phone number ( format
            123-222-7777 )
        handleType:
          type: string
          enum:
            - email
            - sms
        active:
          type: boolean
          description: specifies if notifications will not be sent
    Contact:
      type: object
      required:
        - contactName
        - language
      properties:
        contactId:
          type: string
          minLength: 16
          maxLength: 16
          description: unique identifier for the contact; not required in POST request
        contactName:
          type: string
          minLength: 1
          maxLength: 80
          description: unique contact name to be provided for each contacts.
        contactHash:
          type: string
          description: >-
            unique hash value to identify version of contact, not required in
            POST request
        language:
          type: string
          minLength: 2
          maxLength: 2
          enum:
            - en
            - fr
          description: language used to notify this contact
        notificationPreferences:
          type: array
          description: notification preferences for the contact
          items:
            $ref: '#/components/schemas/NotificationPreference'
    CancellationReason:
      type: object
      required:
        - cancellationReason
      properties:
        cancellationReason:
          type: string
          minLength: 1
          maxLength: 400
          description: cancellation reason
    DeclineReason:
      type: object
      required:
        - declineReason
      properties:
        declineReason:
          type: string
          minLength: 1
          maxLength: 400
          description: decline reason
    RecipientMemo:
      type: object
      minLength: 1
      maxLength: 400
      required:
        - recipientMemo
      properties:
        recipientMemo:
          type: string
          description: recipient memo
    Invoice:
      type: object
      properties:
        invoiceNumber:
          type: string
          minLength: 1
          maxLength: 120
          description: number of the invoice to be paid
        dueDate:
          type: string
          format: dateTime
          description: >-
            UTC date  of  the invoice is to be paid by; format is
            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'
    MoneyRequest:
      type: object
      required:
        - sourceMoneyRequestId
        - requestedFrom
        - amount
        - currency
        - editableFulfillAmount
        - expiryDate
        - supressResponderNotifications
      properties:
        referenceNumber:
          type: string
          maxLength: 16
          description: >-
            unique identifier for the money request; this field should not be
            specified in the POST request
        sourceMoneyRequestId:
          type: string
          minLength: 1
          maxLength: 64
          description: unique identifier of the money request in the originating system
        requestedFrom:
          type: object
          description: >-
            Responder details of the money request, required for get money
            request.
          properties:
            contactId:
              type: string
              description: >-
                Unique identifier for the contact; required for permanent
                contact.
            contactHash:
              type: string
              description: >-
                unique hash value to identify version of contact;required for
                permanent contact.
            contactName:
              type: string
              description: 'contact name, required for onetime contact.'
            language:
              type: string
              enum:
                - en
                - fr
              description: >-
                language used to notify this contact, required for onetime
                contact.
            notificationPreferences:
              type: array
              description: >-
                notification preferences for the contact, required for onetime
                contact.
              items:
                $ref: '#/components/schemas/NotificationPreference'
        amount:
          type: number
          format: double
          description: the requested amount
        currency:
          type: string
          description: the currency of the requested amount; only CAD is supported for now
        editableFulfillAmount:
          type: boolean
          description: >-
            flag indicating if the transfer amount can be different from the
            requested amount
        requesterMessage:
          type: string
          minLength: 1
          maxLength: 400
          description: message from the requester
        invoice:
          $ref: '#/components/schemas/Invoice'
        expiryDate:
          type: string
          format: datetime
          description: >-
            UTC datatime this money request is valid until; format is
            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'
        supressResponderNotifications:
          type: boolean
          description: >-
            if flag is on, Interac will not send notifications to the intended
            responder; the requester is expected to handle the notification part
            themselves
        returnURL:
          type: string
          description: >-
            return URL to redirect the Responder after the Money Request
            fulfillment
        creationDate:
          type: string
          format: datetime
          description: >-
            UTC datatime of creation for this request; this field should not be
            specified in POST or PUT requests; format is
            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'
        status:
          type: integer
          description: >
            Does not need to be provided at request creation time; this field
            should not be specified in POST or PUT requests |
             - REQUEST_INITIATED(1)
             - AVAILABLE_TO_BE_FULFILLED(2)
             - REQUEST_FULFILLED(3)
             - DECLINED(4)
             - CANCELLED(5)
             - EXPIRED(6)
             - DEPOSIT_FAILED(7)
             - REQUEST_COMPLETED(8)
        fulfillAmount:
          type: number
          format: double
          description: >-
            the fulfilled amount; to not be specified in POST or PUT requests;
            present if status is completed
        responderMessage:
          type: string
          description: >-
            message from the responder; this field should not be specified in
            POST or PUT requests
        notificationStatus:
          type: integer
          description: >
            indicates the status of the notifications sent to the recipient;
            this field should not be specified in POST or PUT requests |
              SENT(0)
              PENDING(1)
              PENDING_SEND_FAILURE(2)
              DELIVERY_FAILURE(3)
    errorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: >
            Error list for all the API's, please refer example tag for api
            specific error code.

            1000 Invalid request.

            1001 Invalid access.

            1002 Allowed feature list not supported for user.

            1003 Customer doesn't exist - ParticipantUserId doesn't exist.

            1004 Duplicate User registration - ParticipantUserId is already
            registered.

            1005 ApiRegistartionId doesn't exist.

            1006 Hard contact doesn't exist.

            1007 Contact doesn't exist.

            1008 Duplicate ThirdPartyUserId.

            1009 Invalid ParticipantId.

            1010 Invalid IndirectConnectorId of participant.

            1011 Invalid apiRegistartionId.

            1012 Retrive last updated contact details, contact hash invalid.

            1013 Contact has notification handle registered for direct deposit,
            regular transfer cannot be sent.

            1014 Sender and Recipient cannot be same customer.

            1015 Sender is disabled.

            1016 Transfer amount exceeds the individual outgoing transfer
            threshold.

            1017 Total cumulative transfers exceeds the daily outgoing transfer
            amount threshold.

            1018 Total cumulative transfers exceeds the first rolling limit
            outgoing transfer amount threshold.

            1019 Total cumulative transfers exceeds the second rolling limit
            outgoing transfer amount threshold.

            1020 Duplicate source system id.

            1021 Expiry Date is less than Creation Date.

            1022 Contact is not registered for direct deposit, direct deposit
            cannot be sent.

            1023 Expiry Date exceeds threshold limit.

            1024 Invalid Transfer authentication for the Transfer type.

            1025 Money request doesn't exist.

            1026 Direct deposit registration doesn't exist.

            1027 Hash algorithm not supported by the system.

            1028 Fullfill amount should be same as requested amount.

            1029 Transfer doesn't exist.

            1030 Invalid date range.

            1031 Mutually exclusive options are specified.

            1032 Hash Salt is required if hashtype is not MD5.

            1033 Request cannot be processed due to current status.

            1034 Authentication failed, try again later.

            1035 Authentication failed, can't try later.

            1036 Transfer was authenticated by a different customer.

            1037 Feature is not supported for current user.

            1038 Outgoing money request amount threshold exceeded.

            1039 Maximum number of outgoing money requests threshold exceeded.

            1040 Customer can't send money request to Recipient/Contact.

            1041 Invoice due date exceeds the money request expiry date.

            1042 Exceeded max number of notifications for the Money Request.

            1043 Duplicate contact name.

            1044 Contact can't be deleted if there are in flight transfers.

            1045 Transfer can't be created, due to intrruption in previous
            transfer.

            1046 Currency code or product type is not supported.

            1047 Invalid Transfer type.

            1048 Hard contact already exist for sender.

            1049 Customer blocked to send money request notifications to
            Recipient/Contact

            1050 Editable fulfill amount is not supported for requesting
            customer.

            1051 Recipient  / Responder is disabled.

            1052 Notice cannot be sent. Notifications are supressed for this
            Money Request.

            1053 orderBy field is missing.
          format: int32
        message:
          type: string